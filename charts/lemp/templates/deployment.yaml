apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lemp.fullname" . }}
  labels:
    {{- include "lemp.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.strategy }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "lemp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lemp.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "lemp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{ if .Values.images.php.name }}
        - name: php
          resources:
            {{- toYaml .Values.images.php.resources | nindent 12 }}
          image: "{{ .Values.images.php.name }}:{{ .Values.images.php.version }}"
          imagePullPolicy: {{ .Values.images.php.pullPolicy }}
          env:
            {{ if .Values.application.baseURL }}
            - name: DEVPANEL_HOSTNAME
              value: {{ .Values.application.baseURL }}
            {{ end }}
            {{- if .Values.images.php.env }}
            {{- toYaml .Values.images.php.env | nindent 12 }}
            {{- end }}
            {{ if .Values.codeserver.isEnabled }}
            - name: CODES_ENABLE
              value: "yes"
            {{ else }}
            - name: CODES_ENABLE
              value: ""
            {{ end  }}
            {{ if .Values.application.dbName }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "lemp.fullname" . }}
                  key: "DB_HOST"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "lemp.fullname" . }}
                  key: "DB_NAME"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "lemp.fullname" . }}
                  key: "DB_USER"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lemp.fullname" . }}
                  key: "DB_PASSWORD"
            {{ end }}
          ports:
            - containerPort: {{ .Values.images.php.containerPort }}
            {{ if .Values.codeserver.isEnabled }}
            - name: codeserver
              containerPort: 8080
              protocol: TCP
            {{ end }}
          volumeMounts:
            - name: app-volume
              mountPath: "{{ .Values.application.appRoot }}"
            {{ range .Values.application.externalDisks }}
            {{ if .enabled }}
            - name: "{{ include "lemp.fullname" $ }}-{{ .name }}"
              mountPath: {{ .mountPath }}
            {{ end }}
            {{ end }}
        {{ end }}
        {{ if .Values.images.nginx.name }}
        - name: nginx
          resources:
            {{- toYaml .Values.images.nginx.resources | nindent 12 }}
          image: "{{ .Values.images.nginx.name }}:{{ .Values.images.nginx.version }}"
          imagePullPolicy: {{ .Values.images.nginx.pullPolicy }}
          env:
            {{- if .Values.images.nginx.env }}
            {{- toYaml .Values.images.nginx.env | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.images.nginx.containerPort }}
              name: http
          volumeMounts:
            - name: app-volume
              mountPath: "{{ .Values.application.appRoot }}"
            {{ if eq .Values.application.type "magento2" }}
            - name: custom-conf-tmpl
              mountPath: /etc/gotpl/presets/magento2.conf.tmpl
              subPath: magento2.conf.tmpl
            {{ end }}
            {{ range .Values.application.externalDisks }}
            {{ if .enabled }}
            - name: "{{ include "lemp.fullname" $ }}-{{ .name }}"
              mountPath: {{ .mountPath }}
            {{ end }}
            {{ end }}
        {{ end }}
      volumes:
        - name: app-volume
          persistentVolumeClaim:
            claimName: "{{ include "lemp.fullname" . }}"
        {{ if eq .Values.application.type "magento2" }}
        - name: custom-conf-tmpl
          configMap:
            name: {{ include "lemp.fullname" . }}
        {{ end }}
        {{ range .Values.application.externalDisks }}
        {{ if .enabled }}
        - name: "{{ include "lemp.fullname" $ }}-{{ .name }}"
          persistentVolumeClaim:
            claimName: "{{ include "lemp.fullname" $ }}-{{ .name }}"
        {{ end }}
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}