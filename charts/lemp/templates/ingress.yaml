{{- $apiVersion := "networking.k8s.io/v1" -}}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion  -}}
{{- $apiVersion = "networking.k8s.io/v1" -}}
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
{{- $apiVersion = "networking.k8s.io/v1beta1" -}}
{{- else -}}
{{- $apiVersion = "extensions/v1beta1" -}}
{{- end }}

{{- $fullName := include "lemp.fullname" . -}}
{{- if .Values.ingress.enabled -}}
{{- $svcPort := .Values.service.port -}}
apiVersion: {{ $apiVersion }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "lemp.labels" . | nindent 4 }}
  annotations:
    konghq.com/override: "{{ $fullName }}"
    kubernetes.io/ingress.class: "kong"
    {{- include "lemp.ingress.annotations" . | nindent 4 }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
  {{- if .Values.application.hostNameTLSSecret }}
    - hosts:
      - "{{ .Values.application.hostname }}"
      secretName: {{ .Values.application.hostNameTLSSecret }}
  {{- end }}
{{- end }}
  rules:
  {{- with .Values.application.hostname }}
    {{ if eq $apiVersion "networking.k8s.io/v1" }}
    - host: {{ . | quote }}
      http:
        paths:
        - path: /
          backend:
            service:
              name: {{ $fullName }}
              port: 
                number: {{ $svcPort }}
    {{ else }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
    {{ end }}
  {{- end }}
  {{- range .Values.ingress.hosts }}
    {{ if eq $apiVersion "networking.k8s.io/v1" }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range .paths }}
        - path: {{ . }}
          backend:
            service: 
              name: {{ $fullName }}
              port:
                number: {{ $svcPort }}
        {{- end }}
    {{ else }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range .paths }}
          - path: {{ . }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
        {{- end }}
    {{ end }}
  {{- end }}
{{- end }}

{{- if .Values.codeserver.isEnabled }}
---
apiVersion: {{ $apiVersion }}
kind: Ingress
metadata:
  name: "{{ $fullName }}-codeserver"
  labels:
    {{- include "lemp.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: "kong"
spec:
  {{- if .Values.codeserver.secretName }}
  tls:
    - secretName: {{ .Values.codeserver.secretName | quote }}
      hosts:
        - {{ .Values.codeserver.hostname | quote }}
  {{- end }}
  rules:
    {{ if eq $apiVersion "networking.k8s.io/v1" }}
    - host: {{ .Values.codeserver.hostname | quote }}
      http:
        paths:
        - path: "/"
          backend:
            service:
              name: "{{ $fullName }}-codeserver"
              port:
                number: 8080
    {{ else }}
    - host: {{ .Values.codeserver.hostname | quote }}
      http:
        paths:
        - path: "/"
          backend:
            serviceName: "{{ $fullName }}-codeserver"
            servicePort: codeserver
    {{ end }}
{{- end }}
---
apiVersion: configuration.konghq.com/v1
kind: KongIngress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "lemp.labels" . | nindent 4 }}
route:
  {{ if .Values.ingress.forceSSL }}
  protocols:
    - https
  https_redirect_status_code: 302
  {{ else }}
  protocols:
    - http
    - https
  {{ end }}